-- USER TÁBLA
SELECT * FROM USERS;
--MUSCLE_GROUP TÁBLA
SELECT * FROM MUSCLE_GROUP;
--WORKOUTS TÁBLA
SELECT * FROM WORKOUTS;
--EXERCISE TÁBLA
SELECT * FROM EXERCISES;
--WORKOUT-EXERCISE TÁBLA
SELECT * FROM WORKOUT_EXERCISES;
--WORKOUT_RESULTS TÁBLA
SELECT * FROM WORKOUT_RESULTS;
--AUDIT LOG TÁBLA
SELECT * FROM AUDIT_LOG;
--MY_REPORT tábla
SELECT * FROM MY_REPORT;
--MY_WORKOUT_REPORT tábla
SELECT * FROM MY_WORKOUT_REPORT;


--VIEW TESZT

--1. USER_WORKOUTS_VIEW
SELECT * FROM USER_WORKOUTS_VIEW;
--2.
SELECT * FROM WORKOUT_EXERCISE_RESULTS_VIEW;
--3.
SELECT * FROM EXERCISE_STATS_VIEW;



--FUNCTION TESZT
--1.

SELECT PKG_WORKOUT.GET_TOTAL_REPS_BY_WORKOUT(1) AS total_reps
FROM DUAL;


--2.

SELECT PKG_WORKOUT.TOTAL_WEIGHT_BY_USER_WORKOUT(1, 1) AS Total_weight
FROM DUAL;




--PROC 
--1.

DECLARE
    v_user_id         NUMBER := 1;        
    v_total_workouts  NUMBER;
    v_total_exercises NUMBER;
BEGIN
    PKG_WORKOUT.WORKOUT_AND_EXERCISE_COUNT(
       P_USER_ID         => v_user_id,
       P_TOTAL_WORKOUTS  => v_total_workouts,
       P_TOTAL_EXERCISES => v_total_exercises
    );

    INSERT INTO MY_REPORT (USER_ID, TOTAL_WORKOUTS, TOTAL_EXERCISES)
    VALUES (v_user_id, v_total_workouts, v_total_exercises);

    COMMIT;
END;
/



--2.
BEGIN
    GENERATE_USER_WORKOUT_REPORT(1);  
END;
/



--AUDIT_LOG teszt
-- sor frissítése a workout táblán
UPDATE WORKOUTS
   SET MUSCLE_GROUP_ID = 2     
 WHERE WORKOUT_ID = 1;         

COMMIT;

-- audit tábla lekérdezése az update után
SELECT * FROM AUDIT_LOG
WHERE TABLE_NAME = 'WORKOUTS';

























