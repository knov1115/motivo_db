-- ==========================================
--  Szekvenciák létrehozása
-- ==========================================
CREATE SEQUENCE SEQ_USERS START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MUSCLE_GROUP START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKOUT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_EXERCISES START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_WORKOUT_EXERCISE START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_RESULT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_LOG START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MY_REPORT START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MY_WORKOUT_REPORT START WITH 1 INCREMENT BY 1;


-- TRIGGEREK: ID kitöltése szekvencia .nextval segítségével és audit mezõk kezelése

-- USERS tábla
CREATE OR REPLACE TRIGGER TRG_BI_USERS
BEFORE INSERT ON USERS
FOR EACH ROW
BEGIN
    IF :NEW.USER_ID IS NULL THEN
        :NEW.USER_ID := SEQ_USERS.NEXTVAL;
    END IF;
    :NEW.CREATED_AT := SYSDATE;
    :NEW.CREATED_BY := NVL(SYS_CONTEXT('USERENV','SESSION_USER'), USER);
END;
/

-- MUSCLE_GROUP tábla
CREATE OR REPLACE TRIGGER TRG_BI_MUSCLE_GROUP
BEFORE INSERT ON MUSCLE_GROUP
FOR EACH ROW
BEGIN
    IF :NEW.MUSCLE_GROUP_ID IS NULL THEN
        :NEW.MUSCLE_GROUP_ID := SEQ_MUSCLE_GROUP.NEXTVAL;
    END IF;
    :NEW.CREATED_AT := SYSDATE;
    :NEW.CREATED_BY := NVL(SYS_CONTEXT('USERENV','SESSION_USER'), USER);
END;
/

-- WORKOUTS tábla
CREATE OR REPLACE TRIGGER TRG_BI_WORKOUTS
BEFORE INSERT ON WORKOUTS
FOR EACH ROW
BEGIN
    IF :NEW.WORKOUT_ID IS NULL THEN
        :NEW.WORKOUT_ID := SEQ_WORKOUT.NEXTVAL;
    END IF;
    :NEW.CREATED_AT := SYSDATE;
    :NEW.CREATED_BY := NVL(SYS_CONTEXT('USERENV','SESSION_USER'), USER);
END;
/

-- EXERCISES tábla
CREATE OR REPLACE TRIGGER TRG_BI_EXERCISES
BEFORE INSERT ON EXERCISES
FOR EACH ROW
BEGIN
    IF :NEW.EXERCISE_ID IS NULL THEN
        :NEW.EXERCISE_ID := SEQ_EXERCISES.NEXTVAL;
    END IF;
    :NEW.CREATED_AT := SYSDATE;
    :NEW.CREATED_BY := NVL(SYS_CONTEXT('USERENV','SESSION_USER'), USER);
END;
/

-- WORKOUT_EXERCISES tábla
CREATE OR REPLACE TRIGGER TRG_BI_WO_EXERCISES
BEFORE INSERT ON WORKOUT_EXERCISES
FOR EACH ROW
BEGIN
    IF :NEW.WORKOUT_EXERCISE_ID IS NULL THEN
        :NEW.WORKOUT_EXERCISE_ID := SEQ_WORKOUT_EXERCISE.NEXTVAL;
    END IF;
    :NEW.CREATED_AT := SYSDATE;
    :NEW.CREATED_BY := NVL(SYS_CONTEXT('USERENV','SESSION_USER'), USER);
END;
/

-- WORKOUT_RESULTS tábla
CREATE OR REPLACE TRIGGER TRG_BI_WORKOUT_RESULTS
BEFORE INSERT ON WORKOUT_RESULTS
FOR EACH ROW
BEGIN
    IF :NEW.RESULT_ID IS NULL THEN
        :NEW.RESULT_ID := SEQ_RESULT.NEXTVAL;
    END IF;
    :NEW.CREATED_AT := SYSDATE;
    :NEW.CREATED_BY := NVL(SYS_CONTEXT('USERENV','SESSION_USER'), USER);
END;
/

-- AUDIT_LOG tábla
CREATE OR REPLACE TRIGGER TRG_BI_AUDIT_LOG
BEFORE INSERT ON AUDIT_LOG
FOR EACH ROW
BEGIN
    IF :NEW.LOG_ID IS NULL THEN
        :NEW.LOG_ID := SEQ_LOG.NEXTVAL;
    END IF;
    :NEW.CREATED_AT := SYSDATE;
    :NEW.CREATED_BY := NVL(SYS_CONTEXT('USERENV','SESSION_USER'), USER);
END;
/

-- MY_REPORT tábla
CREATE OR REPLACE TRIGGER TRG_BI_MY_REPORT
BEFORE INSERT ON MY_REPORT
FOR EACH ROW
BEGIN
    IF :NEW.REPORT_ID IS NULL THEN
       :NEW.REPORT_ID := SEQ_MY_REPORT.NEXTVAL;
    END IF;
    IF :NEW.CREATED_AT IS NULL THEN
       :NEW.CREATED_AT := SYSDATE;
    END IF;
END;
/

-- MY_WORKOUT_REPORT tábla
CREATE OR REPLACE TRIGGER TRG_BI_MY_WORKOUT_REPORT
BEFORE INSERT ON MY_WORKOUT_REPORT
FOR EACH ROW
BEGIN
    IF :NEW.REPORT_ID IS NULL THEN
       :NEW.REPORT_ID := SEQ_MY_WORKOUT_REPORT.NEXTVAL;
    END IF;
    
    IF :NEW.CREATED_AT IS NULL THEN
       :NEW.CREATED_AT := SYSDATE;
    END IF;
END;
/


-- AUDIT_LOG tábla
CREATE OR REPLACE TRIGGER TRG_AUDIT_WORKOUT_UPDATE
AFTER UPDATE ON WORKOUTS
FOR EACH ROW
BEGIN
    INSERT INTO AUDIT_LOG (
        LOG_ID, 
        TABLE_NAME, 
        ACTION_TYPE, 
        USERNAME, 
        ACTION_DATE
    )
    VALUES (
        SEQ_LOG.NEXTVAL, 
        'WORKOUTS', 
        'UPDATE', 
        NVL(SYS_CONTEXT('USERENV','SESSION_USER'), USER),
        SYSDATE
    );
END;
/

COMMIT;
